{"ast":null,"code":"// import React, { useContext, useState } from 'react';\n// import { CartContext } from '../context/CartContext';\n// import jsPDF from 'jspdf';\n// import 'jspdf-autotable';\n// import { QRCodeCanvas } from 'qrcode.react';\n// import { createClient } from '@supabase/supabase-js';\n// import axios from 'axios';\n// import './Invoice.css';\n\n// const supabase = createClient(\n//   'https://cslnkpnxwqahipwrjqna.supabase.co',\n//   'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImNzbG5rcG54d3FhaGlwd3JqcW5hIiwicm9sZSI6ImFub24iLCJpYXQiOjE3Mzk2MzAxNDksImV4cCI6MjA1NTIwNjE0OX0.jqJ9wbyVFx09RvlNXnLZipCzFvjY2RTfcbO4XoiTfU8'\n// );\n\n// const Invoice = () => {\n//   const { cart } = useContext(CartContext);\n//   const [showQR, setShowQR] = useState(false);\n//   const [saving, setSaving] = useState(false);\n//   const [showSMSInput, setShowSMSInput] = useState(false);\n//   const [phoneNumber, setPhoneNumber] = useState('');\n\n//   const totalAmount = cart.reduce((total, item) => total + item.price * item.quantity, 0);\n\n//   const saveInvoiceToSupabase = async () => {\n//     setSaving(true);\n\n//     const date = new Date().toISOString();\n//     const invoiceData = {\n//       date,\n//       items: cart.map(item => ({\n//         name: item.name,\n//         price: item.price,\n//         quantity: item.quantity,\n//         total: item.price * item.quantity\n//       })),\n//       total_amount: totalAmount\n//     };\n\n//     const { data, error } = await supabase.from('invoices').insert([invoiceData]);\n\n//     setSaving(false);\n\n//     if (error) {\n//       console.error('Supabase Error:', error);\n//       alert(`Failed to save invoice: ${error.message}`);\n//     } else {\n//       console.log('Invoice saved:', data);\n//       alert('Invoice saved successfully!');\n//     }\n//   };\n\n//   const handleDownloadPDF = () => {\n//     const doc = new jsPDF();\n//     doc.setFontSize(18);\n//     doc.text('Velavan Super Stores', doc.internal.pageSize.getWidth() / 2, 22, { align: 'center' });\n//     doc.setFontSize(12);\n//     doc.text('Phone: 9047665999', 14, 30);\n//     doc.text('Email: velavansuperstores@gmail.com', 14, 36);\n//     doc.text('GST No: 22AAXFV7324B1Z0', 14, 42);\n//     doc.text('Location: Bhavani main road, Salangapalayam, Tamil Nadu-638455', 14, 48);\n\n//     const date = new Date();\n//     doc.text(`Date: ${date.toLocaleDateString()}`, doc.internal.pageSize.getWidth() - 14, 30, { align: 'right' });\n//     doc.text(`Time: ${date.toLocaleTimeString()}`, doc.internal.pageSize.getWidth() - 14, 36, { align: 'right' });\n\n//     doc.line(14, 50, 200, 50);\n\n//     const tableColumn = ['Product', 'Price', 'Quantity', 'Total'];\n//     const tableRows = cart.map(item => [item.name, `₹${item.price}`, item.quantity, `₹${item.price * item.quantity}`]);\n\n//     doc.autoTable({ head: [tableColumn], body: tableRows, startY: 60 });\n//     doc.setFontSize(14);\n//     doc.text(`Total Amount: ₹${totalAmount}`, 14, doc.autoTable.previous.finalY + 10);\n//     doc.save('invoice.pdf');\n//   };\n\n//   const handleSendSMS = async () => {\n//     if (!phoneNumber) {\n//       alert('Please enter a phone number');\n//       return;\n//     }\n\n//     const message = `Your purchase details:\\n${cart.map(item => `${item.name} x ${item.quantity} = ₹${item.price * item.quantity}`).join('\\n')}\\nTotal Amount: ₹${totalAmount}\\n\\nThank you for shopping with Velavan Super Stores !`;\n\n//     try {\n//       await axios.post('https://api.twilio.com/2010-04-01/Accounts/AC11bdfa290a8300b120cf299eebd540cf/Messages.json',\n//         new URLSearchParams({\n//           To: phoneNumber,\n//           From: '+19137324506',\n//           Body: message\n//         }),\n//         {\n//           auth: {\n//             username: 'AC11bdfa290a8300b120cf299eebd540cf',\n//             password: '6979edaf3225e278358c003e7a9a7bc9'\n//           }\n//         }\n//       );\n//       alert('SMS sent successfully!');\n//     } catch (error) {\n//       console.error('Error sending SMS:', error);\n//       alert('Failed to send SMS.');\n//     }\n//   };\n\n//   return (\n//     <div className=\"invoice-container\">\n//       <h2>Invoice</h2>\n//       {cart.length === 0 ? (\n//         <p>No items in the cart</p>\n//       ) : (\n//         <div>\n//           <h3>Velavan Super Stores</h3>\n//           <ul>\n//             {cart.map((item, index) => (\n//               <li key={index}>{item.name} - ₹{item.price} x {item.quantity} = ₹{item.price * item.quantity}</li>\n//             ))}\n//           </ul>\n//           <h3>Total Amount: ₹{totalAmount}</h3>\n\n//           <button onClick={handleDownloadPDF}>Download PDF</button>\n//           <button onClick={saveInvoiceToSupabase} disabled={saving} style={{ marginLeft: '10px' }}>\n//             {saving ? 'Saving...' : 'Save'}\n//           </button>\n//           <button onClick={() => setShowQR(true)} style={{ marginLeft: '10px' }}>Generate Payment</button>\n\n//           {showQR && (\n//             <div className=\"qr-container\">\n//               <h3>Scan to Pay</h3>\n//               <QRCodeCanvas value={`upi://pay?pa=sabarivasan1239@okhdfcbank&pn=Velavan%20Super%20Stores&am=${totalAmount}&cu=INR`} size={200} />\n//               <p>UPI ID: sabarivasan1239@okhdfcbank</p>\n//             </div>\n//           )}\n\n//           <button onClick={() => setShowSMSInput(!showSMSInput)} style={{ marginLeft: '10px' }}>Send SMS</button>\n//           {showSMSInput && (\n//             <div>\n//               <input type=\"text\" placeholder=\"Enter phone number\" value={phoneNumber} onChange={(e) => setPhoneNumber(e.target.value)} />\n//               <button onClick={handleSendSMS}>Send</button>\n//             </div>\n//           )}\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default Invoice;","map":{"version":3,"names":[],"sources":["D:/PROJECTS/Consultancy project/velava-super-stores/src/components/Invoice.js"],"sourcesContent":["// import React, { useContext, useState } from 'react';\r\n// import { CartContext } from '../context/CartContext';\r\n// import jsPDF from 'jspdf';\r\n// import 'jspdf-autotable';\r\n// import { QRCodeCanvas } from 'qrcode.react';\r\n// import { createClient } from '@supabase/supabase-js';\r\n// import axios from 'axios';\r\n// import './Invoice.css';\r\n\r\n// const supabase = createClient(\r\n//   'https://cslnkpnxwqahipwrjqna.supabase.co',\r\n//   'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImNzbG5rcG54d3FhaGlwd3JqcW5hIiwicm9sZSI6ImFub24iLCJpYXQiOjE3Mzk2MzAxNDksImV4cCI6MjA1NTIwNjE0OX0.jqJ9wbyVFx09RvlNXnLZipCzFvjY2RTfcbO4XoiTfU8'\r\n// );\r\n\r\n// const Invoice = () => {\r\n//   const { cart } = useContext(CartContext);\r\n//   const [showQR, setShowQR] = useState(false);\r\n//   const [saving, setSaving] = useState(false);\r\n//   const [showSMSInput, setShowSMSInput] = useState(false);\r\n//   const [phoneNumber, setPhoneNumber] = useState('');\r\n\r\n//   const totalAmount = cart.reduce((total, item) => total + item.price * item.quantity, 0);\r\n\r\n//   const saveInvoiceToSupabase = async () => {\r\n//     setSaving(true);\r\n  \r\n//     const date = new Date().toISOString();\r\n//     const invoiceData = {\r\n//       date,\r\n//       items: cart.map(item => ({\r\n//         name: item.name,\r\n//         price: item.price,\r\n//         quantity: item.quantity,\r\n//         total: item.price * item.quantity\r\n//       })),\r\n//       total_amount: totalAmount\r\n//     };\r\n  \r\n//     const { data, error } = await supabase.from('invoices').insert([invoiceData]);\r\n  \r\n//     setSaving(false);\r\n  \r\n//     if (error) {\r\n//       console.error('Supabase Error:', error);\r\n//       alert(`Failed to save invoice: ${error.message}`);\r\n//     } else {\r\n//       console.log('Invoice saved:', data);\r\n//       alert('Invoice saved successfully!');\r\n//     }\r\n//   };\r\n  \r\n\r\n//   const handleDownloadPDF = () => {\r\n//     const doc = new jsPDF();\r\n//     doc.setFontSize(18);\r\n//     doc.text('Velavan Super Stores', doc.internal.pageSize.getWidth() / 2, 22, { align: 'center' });\r\n//     doc.setFontSize(12);\r\n//     doc.text('Phone: 9047665999', 14, 30);\r\n//     doc.text('Email: velavansuperstores@gmail.com', 14, 36);\r\n//     doc.text('GST No: 22AAXFV7324B1Z0', 14, 42);\r\n//     doc.text('Location: Bhavani main road, Salangapalayam, Tamil Nadu-638455', 14, 48);\r\n    \r\n//     const date = new Date();\r\n//     doc.text(`Date: ${date.toLocaleDateString()}`, doc.internal.pageSize.getWidth() - 14, 30, { align: 'right' });\r\n//     doc.text(`Time: ${date.toLocaleTimeString()}`, doc.internal.pageSize.getWidth() - 14, 36, { align: 'right' });\r\n\r\n//     doc.line(14, 50, 200, 50);\r\n    \r\n//     const tableColumn = ['Product', 'Price', 'Quantity', 'Total'];\r\n//     const tableRows = cart.map(item => [item.name, `₹${item.price}`, item.quantity, `₹${item.price * item.quantity}`]);\r\n\r\n//     doc.autoTable({ head: [tableColumn], body: tableRows, startY: 60 });\r\n//     doc.setFontSize(14);\r\n//     doc.text(`Total Amount: ₹${totalAmount}`, 14, doc.autoTable.previous.finalY + 10);\r\n//     doc.save('invoice.pdf');\r\n//   };\r\n\r\n//   const handleSendSMS = async () => {\r\n//     if (!phoneNumber) {\r\n//       alert('Please enter a phone number');\r\n//       return;\r\n//     }\r\n    \r\n//     const message = `Your purchase details:\\n${cart.map(item => `${item.name} x ${item.quantity} = ₹${item.price * item.quantity}`).join('\\n')}\\nTotal Amount: ₹${totalAmount}\\n\\nThank you for shopping with Velavan Super Stores !`;\r\n    \r\n//     try {\r\n//       await axios.post('https://api.twilio.com/2010-04-01/Accounts/AC11bdfa290a8300b120cf299eebd540cf/Messages.json',\r\n//         new URLSearchParams({\r\n//           To: phoneNumber,\r\n//           From: '+19137324506',\r\n//           Body: message\r\n//         }),\r\n//         {\r\n//           auth: {\r\n//             username: 'AC11bdfa290a8300b120cf299eebd540cf',\r\n//             password: '6979edaf3225e278358c003e7a9a7bc9'\r\n//           }\r\n//         }\r\n//       );\r\n//       alert('SMS sent successfully!');\r\n//     } catch (error) {\r\n//       console.error('Error sending SMS:', error);\r\n//       alert('Failed to send SMS.');\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"invoice-container\">\r\n//       <h2>Invoice</h2>\r\n//       {cart.length === 0 ? (\r\n//         <p>No items in the cart</p>\r\n//       ) : (\r\n//         <div>\r\n//           <h3>Velavan Super Stores</h3>\r\n//           <ul>\r\n//             {cart.map((item, index) => (\r\n//               <li key={index}>{item.name} - ₹{item.price} x {item.quantity} = ₹{item.price * item.quantity}</li>\r\n//             ))}\r\n//           </ul>\r\n//           <h3>Total Amount: ₹{totalAmount}</h3>\r\n          \r\n//           <button onClick={handleDownloadPDF}>Download PDF</button>\r\n//           <button onClick={saveInvoiceToSupabase} disabled={saving} style={{ marginLeft: '10px' }}>\r\n//             {saving ? 'Saving...' : 'Save'}\r\n//           </button>\r\n//           <button onClick={() => setShowQR(true)} style={{ marginLeft: '10px' }}>Generate Payment</button>\r\n          \r\n//           {showQR && (\r\n//             <div className=\"qr-container\">\r\n//               <h3>Scan to Pay</h3>\r\n//               <QRCodeCanvas value={`upi://pay?pa=sabarivasan1239@okhdfcbank&pn=Velavan%20Super%20Stores&am=${totalAmount}&cu=INR`} size={200} />\r\n//               <p>UPI ID: sabarivasan1239@okhdfcbank</p>\r\n//             </div>\r\n//           )}\r\n          \r\n//           <button onClick={() => setShowSMSInput(!showSMSInput)} style={{ marginLeft: '10px' }}>Send SMS</button>\r\n//           {showSMSInput && (\r\n//             <div>\r\n//               <input type=\"text\" placeholder=\"Enter phone number\" value={phoneNumber} onChange={(e) => setPhoneNumber(e.target.value)} />\r\n//               <button onClick={handleSendSMS}>Send</button>\r\n//             </div>\r\n//           )}\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Invoice;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}